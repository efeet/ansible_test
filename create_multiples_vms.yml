---
- hosts: localhost
  gather_facts: no

  tasks:   
    - name: Login to RHV
      ovirt_auth:
        url: "{{ engine_url | default(lookup('env','OVIRT_URL')) | default(omit) }}"
        hostname: "{{ engine_fqdn | default(lookup('env','OVIRT_HOSTNAME')) | default(omit) }}"
        username: "{{ engine_user | default(lookup('env','OVIRT_USERNAME')) | default(omit) }}"
        password: "{{ engine_password | default(lookup('env','OVIRT_PASSWORD')) | default(omit) }}"
        ca_file: "{{ engine_cafile | default(lookup('env','OVIRT_CAFILE')) | default(omit) }}"
        insecure: "{{ engine_insecure | default(true) }}"
      when: ovirt_auth is undefined or not ovirt_auth

    - name: Create VMs
      ovirt_vm:
        comment: "{{ txt_num_tk }} - {{ txt_who_request }}"
        auth: "{{ ovirt_auth }}"
        cluster: CL_CLIENT
        template: "{{ dd_template }}"
        name: "{{ vm_name }}0{{ item }}"
        state: running
        memory: "{{ dd_memory }}"
        cpu_cores: "{{ dpb_cores }}"
        high_availability: true
        type: server
        nics:
          - name: nic1
            profile_name: "{{ vnet_name }}"
        cloud_init:
          user_name: root
          root_password: "redhat"          
          custom_script: |
            runcmd:	
              - hostnamectl set-hostname {{ vm_name }}ABC{{ item }}
              - ETH_CON=$(nmcli --get-values name connection show | grep "eth")
              - nmcli connection down "$ETH_CON"
              - nmcli connection modify "$ETH_CON"
                ipv4.method "manual"
                ip4 {{ txt_ips_addrs.split(',')[item - 1] }}/{{ dd_prefix }}
                gw4 {{ txt_defgw }}
                ipv4.dns-search "example.com lab.example.com"
              - nmcli con up eth0
        wait: true
      loop: "{{ range(1, txt_numbers_vms + 1) | list }}"

    - name: Cleanup RHV auth token
      ovirt_auth:
        ovirt_auth: "{{ ovirt_auth }}"
        state: absent
